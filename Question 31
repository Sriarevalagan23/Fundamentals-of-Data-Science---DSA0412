import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("customers.csv")

features = ['Age', 'Annual_Income', 'Spending_Score']
X = df[features]

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, random_state=42)
    kmeans.fit(X_scaled)
    wcss.append(kmeans.inertia_)

plt.plot(range(1, 11), wcss, marker='o')
plt.title("Elbow Method for Optimal Clusters")
plt.xlabel("Number of clusters")
plt.ylabel("WCSS")
plt.show()

optimal_clusters = int(input("Enter the optimal number of clusters based on the elbow plot: "))

kmeans = KMeans(n_clusters=optimal_clusters, random_state=42)
df['Cluster'] = kmeans.fit_predict(X_scaled)

sns.pairplot(df, hue='Cluster', vars=features, palette='Set2')
plt.suptitle("Customer Segments Based on Features", y=1.02)
plt.show()

print(df[['CustomerID'] + features + ['Cluster']].head())
